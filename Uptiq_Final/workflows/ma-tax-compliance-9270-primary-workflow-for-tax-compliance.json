{
  "_id": "365e1cf6-9c49-4e1e-ae3d-e3c74ec0b915",
  "aiPersonaId": "5cefb5e0-1663-431f-91de-146273e752a4",
  "integrationId": "ma-tax-compliance-9270-primary-workflow-for-tax-compliance",
  "isMiniAgentPrimaryWorkflow": true,
  "name": "Primary Workflow for Tax Compliance",
  "publisherAccountId": "f7383dae-50f9-4420-84b6-e56268bb0738",
  "startTaskId": "e099708f-eeed-41d1-97f7-cdbee12d2016",
  "status": "Active",
  "tasks": [
    {
      "_id": "e099708f-eeed-41d1-97f7-cdbee12d2016",
      "type": "PassThrough",
      "config": {
        "name": "Pass Through",
        "description": "Pass through the input to the output"
      },
      "transitions": [
        {
          "_id": "6ddf38ad-f71c-4c56-93ab-d3cf75fe0fae-e099708f-eeed-41d1-97f7-cdbee12d2016",
          "nextTask": "6ddf38ad-f71c-4c56-93ab-d3cf75fe0fae",
          "name": "If query doesnt exists",
          "rules": [
            {
              "type": "any",
              "operator": "notExists",
              "path": "$output.query"
            }
          ]
        },
        {
          "_id": "d8877d45-6ac4-4167-9954-72fe5220bbf1-e099708f-eeed-41d1-97f7-cdbee12d2016",
          "nextTask": "d8877d45-6ac4-4167-9954-72fe5220bbf1",
          "name": "If intents are already classified",
          "rules": [
            {
              "type": "any",
              "operator": "exists",
              "path": "$output.intents"
            },
            {
              "type": "any",
              "operator": "exists",
              "path": "$output.query"
            }
          ]
        },
        {
          "_id": "e099708f-eeed-41d1-97f7-cdbee12d2016-5c054bb7-58bc-4bda-af38-1afbdb9af21f",
          "name": "If query exists",
          "nextTask": "5c054bb7-58bc-4bda-af38-1afbdb9af21f",
          "rules": [
            {
              "type": "any",
              "operator": "exists",
              "path": "$output.query"
            },
            {
              "type": "any",
              "operator": "notExists",
              "path": "$output.intents"
            }
          ]
        }
      ],
      "globalVariables": [
        {
          "name": "query",
          "referencePath": "$input.query"
        },
        {
          "name": "rawQuery",
          "referencePath": "$input.rawQuery"
        },
        {
          "name": "conversationId",
          "referencePath": "$input.conversationId"
        }
      ]
    },
    {
      "_id": "6ddf38ad-f71c-4c56-93ab-d3cf75fe0fae",
      "type": "Input",
      "config": {
        "name": "User Input",
        "description": "Get user input",
        "type": "string"
      },
      "transitions": [
        {
          "_id": "6ddf38ad-f71c-4c56-93ab-d3cf75fe0fae-5c054bb7-58bc-4bda-af38-1afbdb9af21f",
          "name": "Default",
          "nextTask": "5c054bb7-58bc-4bda-af38-1afbdb9af21f"
        }
      ],
      "globalVariables": [
        {
          "name": "query",
          "referencePath": "$output.userInput"
        },
        {
          "name": "rawQuery",
          "referencePath": "$output.userInput"
        },
        {
          "name": "selfLoopMiniAgent",
          "referencePath": "true"
        }
      ]
    },
    {
      "_id": "5c054bb7-58bc-4bda-af38-1afbdb9af21f",
      "type": "Loader",
      "config": {
        "name": "Loader",
        "description": "Display loader message",
        "type": "loader",
        "text": "Just a moment... identifying the best approach to assist you."
      },
      "transitions": [
        {
          "_id": "5c054bb7-58bc-4bda-af38-1afbdb9af21f-8832ef22-4b68-4fe3-bc9e-a4eddd050ff3",
          "name": "Default",
          "nextTask": "8832ef22-4b68-4fe3-bc9e-a4eddd050ff3"
        }
      ]
    },
    {
      "_id": "8832ef22-4b68-4fe3-bc9e-a4eddd050ff3",
      "type": "IntentClassification",
      "config": {
        "name": "Intent Classification",
        "description": "Classify the intent of the user message",
        "modelId": "4cf651d9-edf3-455f-a22e-53cc67fcc07b",
        "intents": [
          {
            "name": "Verify Compliance",
            "description": "Checks if proposed transactions adhere to tax laws and regulations, such as wash sale rules.",
            "examples": [
              "Is this transaction compliant with current tax laws?",
              "Can you verify if my investment strategy follows tax regulations?",
              "Does selling this stock violate any tax rules?"
            ]
          }
        ],
        "query": "$agent.query"
      },
      "transitions": [
        {
          "_id": "8832ef22-4b68-4fe3-bc9e-a4eddd050ff3-d8877d45-6ac4-4167-9954-72fe5220bbf1",
          "name": "If Intent is Matched",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$output.intentMatched",
              "value": "true"
            }
          ],
          "nextTask": "d8877d45-6ac4-4167-9954-72fe5220bbf1"
        },
        {
          "_id": "8832ef22-4b68-4fe3-bc9e-a4eddd050ff3-dba7c37e-faee-4354-895e-53ac140b9c9d",
          "name": "If No Intent is Matched",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$output.intentMatched",
              "value": "false"
            }
          ],
          "nextTask": "dba7c37e-faee-4354-895e-53ac140b9c9d"
        }
      ]
    },
    {
      "_id": "d8877d45-6ac4-4167-9954-72fe5220bbf1",
      "type": "JSFunction",
      "config": {
        "name": "JS Function",
        "description": "Execute JS function",
        "code": "\nconst main = () => {\n    const currentExecutionId = _id;\n    const intents = agent?.icIntents?.[currentExecutionId] || input.intents;\n    const currentIndex = agent?.icLoopIndexes?.[currentExecutionId] || 0;\n    const currentIntent = intents[currentIndex] || {};\n    const { intent, task } = currentIntent;\n    const state = currentIndex === intents.length ? 'end' : 'continue'\n    const icLoopIndexes = { ...(agent?.icLoopIndexes || {}), [_id]: state === 'end' ? undefined : currentIndex + 1 };\n    const icIntents = { ...(agent?.icIntents || {}), [_id]: state === 'end' ? undefined : intents };\n    return { ...input, intent, state: currentIndex === intents.length ? 'end' : 'continue', icLoopIndexes, icIntents, query: task };\n};\n\nmain()\n"
      },
      "globalVariables": [
        {
          "referencePath": "$output.icLoopIndexes",
          "name": "icLoopIndexes"
        },
        {
          "referencePath": "$output.icIntents",
          "name": "icIntents"
        }
      ],
      "transitions": [
        {
          "_id": "d8877d45-6ac4-4167-9954-72fe5220bbf1-bca92908-aab3-4390-9f9d-5b8affc47e05",
          "name": "If Intent is Matched",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$output.intent",
              "value": "Verify Compliance"
            }
          ],
          "nextTask": "bca92908-aab3-4390-9f9d-5b8affc47e05"
        },
        {
          "_id": "d8877d45-6ac4-4167-9954-72fe5220bbf1-6ddf38ad-f71c-4c56-93ab-d3cf75fe0fae",
          "name": "If Self Loop",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$agent.selfLoopMiniAgent",
              "value": "true"
            },
            {
              "type": "string",
              "operator": "equal",
              "path": "$output.state",
              "value": "end"
            }
          ],
          "nextTask": "6ddf38ad-f71c-4c56-93ab-d3cf75fe0fae"
        }
      ]
    },
    {
      "_id": "bca92908-aab3-4390-9f9d-5b8affc47e05",
      "type": "Workflow",
      "config": {
        "name": "Intent - Verify Compliance",
        "description": "Workflow for intent - Verify Compliance",
        "workflowId": "04fe19b7-b651-4ab8-bee6-73c710b204a7"
      },
      "transitions": [
        {
          "_id": "bca92908-aab3-4390-9f9d-5b8affc47e05-d8877d45-6ac4-4167-9954-72fe5220bbf1",
          "name": "Mini agent execution completed",
          "nextTask": "d8877d45-6ac4-4167-9954-72fe5220bbf1"
        }
      ]
    },
    {
      "_id": "dba7c37e-faee-4354-895e-53ac140b9c9d",
      "transitions": [
        {
          "_id": "dba7c37e-faee-4354-895e-53ac140b9c9d-6ddf38ad-f71c-4c56-93ab-d3cf75fe0fae",
          "name": "If Self Loop",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$agent.selfLoopMiniAgent",
              "value": "true"
            }
          ],
          "nextTask": "6ddf38ad-f71c-4c56-93ab-d3cf75fe0fae"
        }
      ],
      "type": "Output",
      "config": {
        "name": "Output",
        "description": "Output the response to the user",
        "type": "external",
        "text": "Unable to complete task $agent.query"
      }
    },
    {
      "_id": "481d66eb-59c3-485f-b88c-7c4af82490be",
      "transitions": [
        {
          "_id": "481d66eb-59c3-485f-b88c-7c4af82490be-6ddf38ad-f71c-4c56-93ab-d3cf75fe0fae",
          "name": "If Self Loop",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$agent.selfLoopMiniAgent",
              "value": "true"
            }
          ],
          "nextTask": "6ddf38ad-f71c-4c56-93ab-d3cf75fe0fae"
        }
      ],
      "type": "Display",
      "config": {
        "name": "Display",
        "description": "Display the response to the user",
        "type": "text",
        "text": "$input.content"
      }
    }
  ],
  "type": "Conversational",
  "version": "latest"
}